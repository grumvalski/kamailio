ASYNC_HTTP Module

Federico Cabiddu

   <federico.cabiddu@gmail.com>

Edited by

Federico Cabiddu

   <federico.cabiddu@gmail.com>

   Copyright © 2014 Federico Cabiddu
     __________________________________________________________________

   Table of Contents

   1. Admin Guide

        1. Overview
        2. Dependencies

              2.1. Kamailio Modules
              2.2. External Libraries or Applications

        3. Parameters

              3.1. workers (int)
              3.2. http_timeout (str)
              3.3. hash_size (str)

        4. Functions

              4.1. http_async_get(url, route_name)
              4.2. http_async_post(url, post_data, route_name)

        5. Statistics

              5.1. requests
              5.2. replies
              5.3. errors
              5.4. timeouts

   List of Examples

   1.1. Set workers parameter
   1.2. Set http_timeout parameter
   1.3. Set hash_size parameter
   1.4. http_async_get() usage
   1.5. http_async_post() usage

Chapter 1. Admin Guide

   Table of Contents

   1. Overview
   2. Dependencies

        2.1. Kamailio Modules
        2.2. External Libraries or Applications

   3. Parameters

        3.1. workers (int)
        3.2. http_timeout (str)
        3.3. hash_size (str)

   4. Functions

        4.1. http_async_get(url, route_name)
        4.2. http_async_post(url, post_data, route_name)

   5. Statistics

        5.1. requests
        5.2. replies
        5.3. errors
        5.4. timeouts

1. Overview

   This module performs asynchronous HTTP queries.

2. Dependencies

   2.1. Kamailio Modules
   2.2. External Libraries or Applications

2.1. Kamailio Modules

   The following modules must be loaded before this module:
     * tm - Transcation module

2.2. External Libraries or Applications

   The following libraries or applications must be installed before
   running Kamailio with this module loaded:
     * libcurl libev

3. Parameters

   3.1. workers (int)
   3.2. http_timeout (str)
   3.3. hash_size (str)

3.1. workers (int)

   Number of worker processes to be started to send HTTP requests and
   asynchronously handle responses.

   Default value is 1.

   Example 1.1. Set workers parameter
...
modparam("async_http", "workers", 2)
...

3.2. http_timeout (str)

   Defines in milliseconds how long Kamailio waits for response from HTTP
   server.

   Default value is 500ms.

   Example 1.2. Set http_timeout parameter
...
modparam("async_http", "http_timeout", 1000)
...

3.3. hash_size (str)

   The size of the hash table internally used to keep the requests. A
   larger table is much faster but consumes more memory. The hash size
   must be a power of two, otherwise it will be rounded down to the
   nearest power of two.

   Default value is 2048.

   Example 1.3. Set hash_size parameter
...
modparam("async_http", "hash_size", 1024)
...

4. Functions

   4.1. http_async_get(url, route_name)
   4.2. http_async_post(url, post_data, route_name)

4.1.  http_async_get(url, route_name)

   Sends HTTP GET request to URL given in "url" parameter, which is a
   string that may contain pseudo variables.
   Parameter "route_name" defines the route to be executed upon reception
   of HTTP reply, on error or on timeout.

   This function can be used from ANY_ROUTE.

   This method is executed asynchronously. The HTTP return code, body and
   error are returned in three avp. See example on how to retrieve return
   values.

   Example 1.4. http_async_get() usage
...
http_async_get("http://example.com/test.php?r_uri=$rU&f_uri=$fU","HTTP_REPLY");
...
route[HTTP_REPLY] {
    xlog("L_INFO", "route[HTTP_REPLY]: http_rc $avp(http_rc)\n");
    xlog("L_INFO", "route[HTTP_REPLY]: http_rb $avp(http_rb)\n");
    xlog("L_INFO", "route[HTTP_REPLY]: http_error $avp(http_error)\n");
}
...

4.2.  http_async_post(url, post_data, route_name)

   Sends HTTP POST request to URL given in "url" parameter, which is a
   string that may contain pseudo variables.

   Parameter "post_data", which is sent as the body of the request, may
   also contain pseudo variables.
   Parameter "route_name" defines the route to be executed upon reception
   of HTTP reply, on error or on timeout.

   This function can be used from ANY_ROUTE.

   This method is executed asynchronously. The HTTP return code, body and
   error are returned in three avp. See example on how to retrieve return
   values.

   Example 1.5. http_async_post() usage
...
http_async_post("http://example.com/test.php", "{'r_uri':'$rU', 'f_uri':'$fU'}",
"HTTP_REPLY");
...
route[HTTP_REPLY] {
    xlog("L_INFO", "route[HTTP_REPLY]: http_rc $avp(http_rc)\n");
    xlog("L_INFO", "route[HTTP_REPLY]: http_rb $avp(http_rb)\n");
    xlog("L_INFO", "route[HTTP_REPLY]: http_error $avp(http_error)\n");
}
...

5. Statistics

   5.1. requests
   5.2. replies
   5.3. errors
   5.4. timeouts

5.1. requests

   The number of http requests sent.

5.2. replies

   The number of received http replies.

5.3. errors

   The number of errors.

5.4. timeouts

   The number of timed out requests.
